<!DOCTYPE html>
<html lang="ru">
<head>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>–¶–∏—Ç–∞—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä ‚Äî –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –æ–¥–Ω–∏–º –∫–ª–∏–∫–æ–º</title>
<meta name="description" content="–ö—Ä–∞—Å–∏–≤—ã–µ –∞–Ω–∏–º–∞—Ü–∏–∏ –∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Ü–∏—Ç–∞—Ç. –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å–≤–æ–∏, –∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –¥–µ–ª–∏—Ç–µ—Å—å.">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;600;800&family=Playfair+Display:wght@600;800&display=swap" rel="stylesheet">
<style>
  :root{
    --bg1: #0ea5e9;
    --bg2: #9333ea;
    --bg3: #f59e0b;
    --glass: rgba(255,255,255,.10);
    --glass-strong: rgba(255,255,255,.25);
    --text: #eaf2ff;
    --muted: #c4d0ff;
    --card: rgba(8, 12, 24, .6);
    --shadow: 0 20px 60px rgba(0,0,0,.35);
    --accent: #22d3ee;
  }
  @media (prefers-color-scheme: light){
    :root{
      --text: #0b1220;
      --muted: #475569;
      --card: rgba(255,255,255,.6);
      --glass: rgba(255,255,255,.55);
      --glass-strong: rgba(255,255,255,.75);
      --shadow: 0 20px 60px rgba(19, 21, 43, .15);
    }
  }
  *{box-sizing:border-box}
  html,body{height:100%}
  body{
    margin:0;
    color:var(--text);
    font:16px/1.6 Inter, system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji", "Segoe UI Emoji";
    overflow-x:hidden;
    background: radial-gradient(1200px 800px at 10% 10%, rgba(255,255,255,.06), transparent 60%),
                radial-gradient(1200px 800px at 90% 90%, rgba(255,255,255,.06), transparent 60%);
  }
  .sky{
    position:fixed; inset:0; z-index:-2;
    background: conic-gradient(from 180deg at 50% 50%, var(--bg1), var(--bg2), var(--bg3), var(--bg1));
    filter: saturate(120%);
    animation: spin 18s linear infinite;
  }
  @keyframes spin{to{transform:rotate(360deg)}}
  .blob{
    position:fixed; border-radius:40% 60% 55% 45% / 55% 45% 55% 45%;
    background: var(--glass);
    filter: blur(10px) saturate(140%);
    animation: float 14s ease-in-out infinite alternate;
    z-index:-1;
  }
  .blob:nth-child(1){width:40vmax; height:40vmax; top:-10vmax; left:-10vmax;}
  .blob:nth-child(2){width:35vmax; height:35vmax; bottom:-6vmax; right:-6vmax; animation-duration: 16s;}
  .blob:nth-child(3){width:25vmax; height:25vmax; top:50%; left:70%; transform:translate(-50%,-50%); animation-duration: 20s;}
  @keyframes float{
    0%{transform:translateY(0) rotate(0deg)}
    100%{transform:translateY(-30px) rotate(10deg)}
  }
  .wrap{
    min-height:100%;
    display:grid;
    place-items:center;
    padding: clamp(24px, 4vw, 64px);
  }
  header{
    position:fixed; top:16px; left:50%; transform:translateX(-50%);
    background: var(--glass);
    backdrop-filter: blur(14px);
    border: 1px solid rgba(255,255,255,.25);
    border-radius: 999px;
    padding: 10px 18px;
    box-shadow: var(--shadow);
    display:flex; gap:10px; align-items:center;
    user-select:none;
  }
  header .dot{
    width:10px; height:10px; border-radius:50%;
    background: var(--accent); box-shadow:0 0 20px var(--accent);
  }
  header b{letter-spacing:.4px}
  main{width:min(900px, 100%);}
  .card{
    background:var(--card);
    backdrop-filter: blur(18px) saturate(130%);
    border:1px solid rgba(255,255,255,.25);
    border-radius: 28px;
    padding: clamp(22px, 3.2vw, 34px);
    box-shadow: var(--shadow);
    transform-style: preserve-3d;
    transition: transform .6s cubic-bezier(.2,.8,.2,1);
  }
  .card:hover{transform: translateY(-2px)}
  .title{display:flex; align-items:center; gap:12px; margin: 2px 0 12px;}
  .logo{
    width:40px; height:40px; border-radius:14px;
    display:grid; place-items:center;
    background: linear-gradient(135deg, rgba(255,255,255,.7), rgba(255,255,255,.2));
    color:#0b1220; font-weight:800;
    text-shadow: 0 1px 0 rgba(255,255,255,.6);
    transform: translateZ(20px);
  }
  h1{
    font-family: "Playfair Display", Georgia, serif;
    font-weight:800; line-height:1.15;
    margin:0; font-size: clamp(28px, 4.2vw, 42px);
    letter-spacing:.3px;
    text-wrap:balance;
  }
  p.lead{margin: 6px 0 20px; color:var(--muted);}
  .quote{
    margin: 18px 0 6px;
    font-size: clamp(22px, 3.5vw, 34px);
    font-weight:600;
    letter-spacing:.2px;
    text-wrap:pretty;
  }
  .author{opacity:.8; font-style:italic; margin-bottom: 14px}
  .pillbar{display:flex; flex-wrap:wrap; gap:10px; margin-top:18px;}
  .btn{
    appearance:none; border:none; cursor:pointer;
    padding:12px 16px; border-radius:14px;
    background: linear-gradient(135deg, var(--glass-strong), rgba(255,255,255,.05));
    color:inherit; font-weight:700;
    backdrop-filter: blur(8px);
    border:1px solid rgba(255,255,255,.35);
    transition: transform .15s ease, box-shadow .2s ease, background .2s ease;
    box-shadow: 0 6px 20px rgba(0,0,0,.12);
    display:flex; align-items:center; gap:10px;
  }
  .btn:hover{transform: translateY(-2px)}
  .btn:active{transform: translateY(0)}
  .btn.primary{box-shadow: 0 14px 36px rgba(34,211,238,.35)}
  .tiny{font-size:12px; opacity:.8}
  .switch{margin-left:auto; display:flex; align-items:center; gap:8px;}
  .switch input{accent-color: var(--accent); width:42px; height:22px}
  .footer{text-align:center; margin-top:16px; opacity:.8; font-size:13px;}
  details{
    margin-top: 18px;
    background: linear-gradient(180deg, rgba(255,255,255,.12), rgba(255,255,255,.02));
    border:1px solid rgba(255,255,255,.25);
    border-radius: 16px; padding: 14px 16px;
  }
  summary{cursor:pointer; font-weight:700}
  .list{display:grid; gap:10px; margin-top:10px}
  .row{
    display:flex; gap:10px; align-items:center; justify-content:space-between;
    padding:8px 10px; border-radius:12px; background: rgba(255,255,255,.06);
  }
  .grow{flex:1; min-width:0}
  .tools{display:flex; gap:8px}
  .fade-in{animation: fade .45s ease both}
  @keyframes fade{from{opacity:0; transform:translateY(6px)} to{opacity:1; transform:none}}
</style>
</head>
<body>
<div class="sky"></div>
<div class="blob"></div>
<div class="blob"></div>
<div class="blob"></div>

<header>
  <span class="dot"></span>
  <b>–¶–∏—Ç–∞—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä</b>
  <span class="tiny">v1.0</span>
</header>

<div class="wrap">
  <main>
    <section class="card" id="card" aria-live="polite">
      <div class="title">
        <div class="logo">Q</div>
        <div>
          <h1>–í–¥–æ—Ö–Ω–æ–≤–ª—è–π—Å—è –∫—Ä–∞—Å–∏–≤—ã–º–∏ —Ü–∏—Ç–∞—Ç–∞–º–∏</h1>
          <p class="lead">–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ‚Äî –ø–æ–ª—É—á–∏ –Ω–æ–≤—É—é –º—ã—Å–ª—å. –î–æ–±–∞–≤–ª—è–π —Å–≤–æ–∏ —Ü–∏—Ç–∞—Ç—ã, –∫–æ–ø–∏—Ä—É–π –∏ –¥–µ–ª–∏—Å—å.</p>
        </div>
      </div>

      <div class="quote" id="quote">¬´–ö—Ä–∞—Å–æ—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –≤ –º–æ–º–µ–Ω—Ç, –∫–æ–≥–¥–∞ —Ç—ã —Ä–µ—à–∞–µ—à—å –±—ã—Ç—å —Å–æ–±–æ–π.¬ª</div>
      <div class="author" id="author">‚Äî –ö–æ–∫–æ –®–∞–Ω–µ–ª—å</div>

      <div class="pillbar">
        <button class="btn primary" id="newBtn">‚ú® –ù–æ–≤–∞—è —Ü–∏—Ç–∞—Ç–∞</button>
        <button class="btn" id="copyBtn">üìã –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
        <button class="btn" id="saveBtn">‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–≤–æ—é</button>
        <button class="btn" id="shareBtn">üîó –ü–æ–¥–µ–ª–∏—Ç—å—Å—è</button>
        <label class="switch tiny" title="–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥">
          <input type="checkbox" id="autoToggle"> –∞–≤—Ç–æ
        </label>
      </div>

      <details>
        <summary>–ò—Å—Ç–æ—Ä–∏—è –∏ —Å–≤–æ–∏ —Ü–∏—Ç–∞—Ç—ã</summary>
        <div class="list" id="history"></div>
      </details>

      <p class="footer tiny">–ü–æ–¥—Å–∫–∞–∑–∫–∞: –Ω–∞–∂–º–∏ <b>G</b> –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏, <b>C</b> ‚Äî –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å.</p>
    </section>
  </main>
</div>

<script>
const $ = (sel)=>document.querySelector(sel);
const $$ = (sel)=>document.querySelectorAll(sel);

const PRESET_QUOTES = [
  ["–ë—É–¥—å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å –≤–∏–¥–µ—Ç—å –≤ –º–∏—Ä–µ.","–ú–∞—Ö–∞—Ç–º–∞ –ì–∞–Ω–¥–∏"],
  ["–°–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–ª—è—é—Ç —Ö–∞—Ä–∞–∫—Ç–µ—Ä.","–£–∏–Ω—Å—Ç–æ–Ω –ß–µ—Ä—á–∏–ª–ª—å"],
  ["–ú—ã ‚Äî —ç—Ç–æ —Ç–æ, —á—Ç–æ –¥–µ–ª–∞–µ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ. –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ ‚Äî –Ω–µ –¥–µ–π—Å—Ç–≤–∏–µ, –∞ –ø—Ä–∏–≤—ã—á–∫–∞.","–ê—Ä–∏—Å—Ç–æ—Ç–µ–ª—å"],
  ["–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –ª–µ—Ç–µ—Ç—å ‚Äî –±–µ–≥–∏, –µ—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –±–µ–∂–∞—Ç—å ‚Äî –∏–¥–∏, –µ—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –∏–¥—Ç–∏ ‚Äî –ø–æ–ª–∑–∏, –Ω–æ —á—Ç–æ –±—ã –Ω–∏ –±—ã–ª–æ ‚Äî –ø—Ä–æ–¥–≤–∏–≥–∞–π—Å—è –≤–ø–µ—Ä—ë–¥.","–ú–∞—Ä—Ç–∏–Ω –õ—é—Ç–µ—Ä –ö–∏–Ω–≥"],
  ["–ù–µ –±–æ–π—Å—è –º–µ–¥–ª–µ–Ω–Ω–æ –∏–¥—Ç–∏, –±–æ–π—Å—è —Å—Ç–æ—è—Ç—å –Ω–∞ –º–µ—Å—Ç–µ.","–ö–∏—Ç–∞–π—Å–∫–∞—è –ø–æ—Å–ª–æ–≤–∏—Ü–∞"],
  ["–°—á–∞—Å—Ç—å–µ ‚Äî —ç—Ç–æ –ø—É—Ç—å, –∞ –Ω–µ –ø—É–Ω–∫—Ç –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.","–ë—É–¥–¥–∞"],
  ["–¢–∞–º, –≥–¥–µ –≤–Ω–∏–º–∞–Ω–∏–µ ‚Äî —Ç–∞–º –∏ —ç–Ω–µ—Ä–≥–∏—è.","–¢–æ–Ω–∏ –†–æ–±–±–∏–Ω—Å"],
  ["–î–µ–ª–∞–π, —á—Ç–æ –º–æ–∂–µ—à—å, —Å —Ç–µ–º, —á—Ç–æ –∏–º–µ–µ—à—å, —Ç–∞–º, –≥–¥–µ —Ç—ã –µ—Å—Ç—å.","–¢–µ–æ–¥–æ—Ä –†—É–∑–≤–µ–ª—å—Ç"],
  ["–¢–∏—à–∏–Ω–∞ ‚Äî —ç—Ç–æ –º–µ—Å—Ç–æ, –≥–¥–µ —Ä–æ–∂–¥–∞—é—Ç—Å—è –ª—É—á—à–∏–µ –∏–¥–µ–∏.","–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"],
  ["–£—Å–ø–µ—Ö ‚Äî —ç—Ç–æ —Å—É–º–º–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö —É—Å–∏–ª–∏–π, –ø–æ–≤—Ç–æ—Ä—è–µ–º—ã—Ö –∏–∑–æ –¥–Ω—è –≤ –¥–µ–Ω—å.","–†–æ–±–µ—Ä—Ç –ö–æ–ª–ª—å–µ—Ä"]
];

const PARTS_A = ["–°–º–µ–ª–æ—Å—Ç—å", "–¢–µ—Ä–ø–µ–Ω–∏–µ", "–î–æ–±—Ä–æ—Ç–∞", "–¢–∏—à–∏–Ω–∞", "–õ—é–±–æ–ø—ã—Ç—Å—Ç–≤–æ", "–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞", "–§–æ–∫—É—Å"];
const PARTS_B = ["—Ä–∞—Å—Ç–∏—Ç", "–æ—Ç–∫—Ä—ã–≤–∞–µ—Ç", "–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç", "—É–º–Ω–æ–∂–∞–µ—Ç", "–æ—á–∏—â–∞–µ—Ç", "—É—Å–∫–æ—Ä—è–µ—Ç", "—É–∫—Ä–µ–ø–ª—è–µ—Ç"];
const PARTS_C = ["—Ç–∞–ª–∞–Ω—Ç", "–ø—É—Ç—å", "–≤–Ω–∏–º–∞–Ω–∏–µ", "—Ä–µ–∑—É–ª—å—Ç–∞—Ç", "—Å–µ—Ä–¥—Ü–µ", "–º—ã—Å–ª–∏", "–º–µ—á—Ç—É"];

const STORAGE_KEY = "qgen.userQuotes.v1";
const HISTORY_KEY = "qgen.history.v1";

let userQuotes = JSON.parse(localStorage.getItem(STORAGE_KEY) || "[]");
let history = JSON.parse(localStorage.getItem(HISTORY_KEY) || "[]");

function saveState(){
  localStorage.setItem(STORAGE_KEY, JSON.stringify(userQuotes));
  localStorage.setItem(HISTORY_KEY, JSON.stringify(history.slice(0, 50)));
}

function pick(arr){ return arr[Math.floor(Math.random()*arr.length)]; }

function synthQuote(){
  const text = `${pick(PARTS_A)} ${pick(PARTS_B)} ${pick(PARTS_C)}.`;
  const author = "‚Äî –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä";
  return [text, author];
}

function nextQuote(){
  const pools = [...PRESET_QUOTES, ...userQuotes];
  const useSynthetic = Math.random() < 0.55;
  const pair = useSynthetic ? synthQuote() : pick(pools);
  showQuote(pair[0], pair[1]);
  confetti();
  addHistory(pair[0], pair[1]);
}

function showQuote(q, a){
  $("#quote").textContent = `¬´${q.replace(/[¬´¬ª]/g,"")}¬ª`;
  $("#author").textContent = a.startsWith("‚Äî")? a : `‚Äî ${a}`;
  $("#card").classList.remove("fade-in");
  void $("#card").offsetWidth;
  $("#card").classList.add("fade-in");
}

function addHistory(q,a){
  history.unshift({q,a,ts:Date.now()});
  history = history.slice(0, 30);
  renderHistory();
  saveState();
}

function renderHistory(){
  const list = $("#history");
  list.innerHTML = "";
  history.forEach((item, i)=>{
    const row = document.createElement("div");
    row.className = "row";
    row.innerHTML = `<div class="grow tiny">¬´${item.q}¬ª <i>${item.a}</i></div>
      <div class="tools">
        <button class="btn tiny" data-copy="${i}">–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å</button>
        <button class="btn tiny" data-use="${i}">–ø–æ–∫–∞–∑–∞—Ç—å</button>
      </div>`;
    list.appendChild(row);
  });
  list.querySelectorAll("[data-copy]").forEach(btn=>btn.onclick = ()=>{
    const i = +btn.dataset.copy; copyText(`¬´${history[i].q}¬ª ${history[i].a}`);
  });
  list.querySelectorAll("[data-use]").forEach(btn=>btn.onclick = ()=>{
    const i = +btn.dataset.use; showQuote(history[i].q, history[i].a);
  });
}

function copyText(text){
  navigator.clipboard.writeText(text).then(()=> flash("–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!"));
}

function flash(msg){
  const el = document.createElement("div");
  el.textContent = msg;
  Object.assign(el.style, {
    position:"fixed", inset:"auto 50% 28px auto", transform:"translateX(-50%)",
    background:"rgba(0,0,0,.6)", color:"#fff", padding:"10px 14px",
    borderRadius:"12px", backdropFilter:"blur(6px)", zIndex:9999, boxShadow:"0 8px 24px rgba(0,0,0,.2)"
  });
  document.body.appendChild(el);
  setTimeout(()=> el.remove(), 1200);
}

function confetti(){
  const n = 20 + Math.floor(Math.random()*20);
  for(let i=0;i<n;i++){
    const span = document.createElement("span");
    span.textContent = ["‚ú¶","‚ú∫","‚òÖ","‚Ä¢","‚ùñ"][Math.floor(Math.random()*5)];
    Object.assign(span.style, {
      position:"fixed",
      left: (window.innerWidth/2 + (Math.random()-0.5)*240) + "px",
      top: (window.innerHeight/2 - 40) + "px",
      fontSize: (12+Math.random()*22)+"px",
      opacity: 1,
      pointerEvents:"none",
      transition: "transform 1.2s ease, opacity 1.2s ease",
      zIndex: 1000
    });
    document.body.appendChild(span);
    requestAnimationFrame(()=>{
      span.style.transform = `translate(${(Math.random()-0.5)*400}px, ${200+Math.random()*200}px) rotate(${(Math.random()-0.5)*120}deg)`;
      span.style.opacity = 0;
    });
    setTimeout(()=> span.remove(), 1300);
  }
}

$("#newBtn").onclick = nextQuote;
$("#copyBtn").onclick = ()=> copyText(`${$("#quote").textContent} ${$("#author").textContent}`);
$("#saveBtn").onclick = async ()=>{
  const q = prompt("–í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Ü–∏—Ç–∞—Ç—ã:");
  if(!q) return;
  const a = prompt("–ê–≤—Ç–æ—Ä (–º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –ø—É—Å—Ç—ã–º):") || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π";
  userQuotes.push([q, a]);
  addHistory(q, a);
  saveState();
  flash("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ!");
};
$("#shareBtn").onclick = ()=>{
  const text = `${$("#quote").textContent} ${$("#author").textContent}`;
  if(navigator.share){
    navigator.share({text}).catch(()=>{});
  }else{
    copyText(text);
  }
};
$("#autoToggle").onchange = (e)=>{
  if(e.target.checked){
    nextQuote();
    e.target._timer = setInterval(nextQuote, 10000);
    flash("–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞");
  }else{
    clearInterval(e.target._timer);
    flash("–ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—ã–∫–ª—é—á–µ–Ω–∞");
  }
};

document.addEventListener("keydown", (ev)=>{
  if(ev.key.toLowerCase()==="g") nextQuote();
  if(ev.key.toLowerCase()==="c") $("#copyBtn").click();
});

renderHistory();
</script>
</body>
</html>